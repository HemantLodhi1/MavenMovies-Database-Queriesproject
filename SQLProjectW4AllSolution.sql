use mavenmovies;
--1.Find the titles of movies except starting with a that have been rented more than 30 times, and sort them in desc order.
SELECT 
f.title, 
count(r.rental_id) as RentalCount-- to show how many times rented
FROM film AS f
INNER JOIN inventory AS i ON f.film_id = i.film_id
INNER JOIN rental AS r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) > 30 AND NOT f.title LIKE 'A%'
ORDER BY COUNT(r.rental_id) DESC; 


--2. Find the total revenue generated by store1.
SELECT SUM(p.amount) AS total_revenue
FROM payment AS p
INNER JOIN  rental AS r ON p.rental_id = r.rental_id
INNER JOIN inventory AS i ON r.inventory_id = i.inventory_id
INNER JOIN store AS s ON i.store_id = s.store_id
WHERE s.store_id = 1;



--3. Find the titles of movies in the 'horror' category and sort them based on the last character of the title
SELECT title
FROM film AS f
INNER JOIN  film_category AS fc ON f.film_id = fc.film_id
INNER JOIN category AS c ON fc.category_id = c.category_id
WHERE c.name = 'Horror'
ORDER BY SUBSTRING(title, LENGTH(title), 1);


--4. Retrieve the top 5 customers whose name starts with E and have made the highest number of rentals. Display their customer IDs and the total number of rentals they have made.
SELECT c.customer_id,
CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
COUNT(r.rental_id) AS total_rentals
FROM customer AS c
INNER JOIN rental AS r ON c.customer_id = r.customer_id
WHERE c.first_name LIKE 'E%'
GROUP BY c.customer_id
ORDER BY total_rentals DESC
LIMIT 5;

--5. Find the total number of films available in each category, and list the categories in descending order of film count.
SELECT
c.name AS category_name,
COUNT(f.film_id) AS film_count
FROM category AS c
LEFT JOIN film_category AS fc ON c.category_id = fc.category_id
LEFT JOIN film AS f ON fc.film_id = f.film_id
GROUP BY c.name
ORDER BY film_count DESC;



/*
SELECT
CONCAT(c.first_name, ' ', c.last_name) AS CustomerName,
MAX(r.rental_date) AS LastRentalDate,
DATEDIFF('2006-09-01', MAX(r.rental_date)) AS DaysFromLastRental
FROM
customer AS c
LEFT JOIN
rental AS r ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.first_name, c.last_name
ORDER BY DaysFromLastRental DESC;
*/


SELECT
c.country AS Country,
COUNT(distinct c.customer_id) AS CustomerCount,
SUM(p.amount) AS TotalRentalRevenue
FROM
customer AS c
INNER JOIN
address AS a ON c.address_id = a.address_id
INNER JOIN
city AS ct ON a.city_id = ct.city_id
INNER JOIN
country AS cn ON ct.country_id = cn.country_id
LEFT JOIN
payment AS p ON c.customer_id = p.customer_id
GROUP BY
c.country
ORDER BY
TotalRentalRevenue DESC;



/*Get the customers whose name starts with A and Have made a total payment of < 100 dollars and also I need customer whose name does not starts with A and have made a payment between 100 and 150 dollars*/

SELECT
CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
SUM(p.amount) AS total_payment
FROM
customer AS c
LEFT JOIN
payment AS p ON c.customer_id = p.customer_id
GROUP BY
c.customer_id, customer_name
HAVING
(customer_name LIKE 'A%' AND total_payment < 100)
OR(customer_name NOT LIKE 'A%' AND total_payment BETWEEN 100 AND 150)
;


SELECT
film_id,
title, SUBSTRING(title, 3, 4) AS extracted_characters
FROM
film;
