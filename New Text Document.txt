use mavenmovies;
--1.Find the titles of movies except starting with a that have been rented more than 30 times, and sort them in desc order.
SELECT f.title
FROM film AS f
INNER JOIN inventory AS i ON f.film_id = i.film_id
INNER JOIN rental AS r ON i.inventory_id = r.inventory_id
GROUP BY f.title
HAVING COUNT(r.rental_id) > 30 AND NOT f.title LIKE 'A%'
ORDER BY COUNT(r.rental_id) DESC; 


--2. Find the total revenue generated by store1.
SELECT SUM(p.amount) AS total_revenue
FROM payment AS p
INNER JOIN  rental AS r ON p.rental_id = r.rental_id
INNER JOIN inventory AS i ON r.inventory_id = i.inventory_id
INNER JOIN store AS s ON i.store_id = s.store_id
WHERE s.store_id = 1;



--3. Find the titles of movies in the 'horror' category and sort them based on the last character of the title
SELECT title
FROM film AS f
INNER JOIN  film_category AS fc ON f.film_id = fc.film_id
INNER JOIN category AS c ON fc.category_id = c.category_id
WHERE c.name = 'Horror'
ORDER BY SUBSTRING(title, LENGTH(title), 1);


--4. Retrieve the top 5 customers whose name starts with E and have made the highest number of rentals. Display their customer IDs and the total number of rentals they have made.
SELECT c.customer_id,
CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
COUNT(r.rental_id) AS total_rentals
FROM customer AS c
INNER JOIN rental AS r ON c.customer_id = r.customer_id
WHERE c.first_name LIKE 'E%'
GROUP BY c.customer_id
ORDER BY total_rentals DESC
LIMIT 5;

--5. Find the total number of films available in each category, and list the categories in descending order of film count.
SELECT
c.name AS category_name,
COUNT(f.film_id) AS film_count
FROM category AS c
LEFT JOIN film_category AS fc ON c.category_id = fc.category_id
LEFT JOIN film AS f ON fc.film_id = f.film_id
GROUP BY c.name
ORDER BY film_count DESC;
